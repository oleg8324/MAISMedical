'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq

Partial Public Class MAISContext
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=MAISContext")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Property Address_Type() As DbSet(Of Address_Type)
    Public Property Application_Status_Type() As DbSet(Of Application_Status_Type)
    Public Property Application_Type() As DbSet(Of Application_Type)
    Public Property Attestations() As DbSet(Of Attestation)
    Public Property Category_Type() As DbSet(Of Category_Type)
    Public Property Certification_Status_Type() As DbSet(Of Certification_Status_Type)
    Public Property Contact_Type() As DbSet(Of Contact_Type)
    Public Property Document_Type() As DbSet(Of Document_Type)
    Public Property Employer_Type() As DbSet(Of Employer_Type)
    Public Property Identification_Type() As DbSet(Of Identification_Type)
    Public Property Level_Type() As DbSet(Of Level_Type)
    Public Property MAIS_Role() As DbSet(Of MAIS_Role)
    Public Property Notation_Type() As DbSet(Of Notation_Type)
    Public Property Person_Type() As DbSet(Of Person_Type)
    Public Property Reasons_For_Notation() As DbSet(Of Reasons_For_Notation)
    Public Property Skill_CheckList() As DbSet(Of Skill_CheckList)
    Public Property Skill_Type() As DbSet(Of Skill_Type)
    Public Property Application_History_Status() As DbSet(Of Application_History_Status)
    Public Property Attestation_Application_Type_Role_Xref() As DbSet(Of Attestation_Application_Type_Role_Xref)
    Public Property Category_Type_Skill_Type_Xref() As DbSet(Of Category_Type_Skill_Type_Xref)
    Public Property Certifications() As DbSet(Of Certification)
    Public Property Certification_Requirement_Information() As DbSet(Of Certification_Requirement_Information)
    Public Property Certification_Status() As DbSet(Of Certification_Status)
    Public Property DDPersonnels() As DbSet(Of DDPersonnel)
    Public Property Discussion_Forum() As DbSet(Of Discussion_Forum)
    Public Property Employers() As DbSet(Of Employer)
    Public Property Employer_RN_DD_Person_Type_Xref() As DbSet(Of Employer_RN_DD_Person_Type_Xref)
    Public Property Notation_Reason_RN_DD_Xref() As DbSet(Of Notation_Reason_RN_DD_Xref)
    Public Property Notation_Reason_Xref() As DbSet(Of Notation_Reason_Xref)
    Public Property Person_Course_Session_Xref() As DbSet(Of Person_Course_Session_Xref)
    Public Property Person_Course_Xref() As DbSet(Of Person_Course_Xref)
    Public Property RNs() As DbSet(Of RN)
    Public Property RN_DD_Person_Type_Xref() As DbSet(Of RN_DD_Person_Type_Xref)
    Public Property Role_Category_Level_Xref() As DbSet(Of Role_Category_Level_Xref)
    Public Property Role_RN_DD_Personnel_Xref() As DbSet(Of Role_RN_DD_Personnel_Xref)
    Public Property Skill_Type_Skill_CheckList_Xref() As DbSet(Of Skill_Type_Skill_CheckList_Xref)
    Public Property Skill_Verification() As DbSet(Of Skill_Verification)
    Public Property Skill_Verification_Skill_Type_Xref() As DbSet(Of Skill_Verification_Skill_Type_Xref)
    Public Property Skill_Verification_Type_CheckList_Xref() As DbSet(Of Skill_Verification_Type_CheckList_Xref)
    Public Property Application_Course_Session_Xref() As DbSet(Of Application_Course_Session_Xref)
    Public Property Application_Course_Xref() As DbSet(Of Application_Course_Xref)
    Public Property Application_Skill_Type_CheckList_Xref() As DbSet(Of Application_Skill_Type_CheckList_Xref)
    Public Property Application_Skill_Type_Xref() As DbSet(Of Application_Skill_Type_Xref)
    Public Property Application_Skill_Verification() As DbSet(Of Application_Skill_Verification)
    Public Property CEUs_Renewal_Application() As DbSet(Of CEUs_Renewal_Application)
    Public Property DDPersonnel_Application() As DbSet(Of DDPersonnel_Application)
    Public Property Document_Image_Store() As DbSet(Of Document_Image_Store)
    Public Property RN_Application() As DbSet(Of RN_Application)
    Public Property RN_Application_Work_Experience() As DbSet(Of RN_Application_Work_Experience)
    Public Property Errors_Log() As DbSet(Of Errors_Log)
    Public Property Sessions() As DbSet(Of Session)
    Public Property Session_Information() As DbSet(Of Session_Information)
    Public Property CEUs_Renewal() As DbSet(Of CEUs_Renewal)
    Public Property Application_Attestation() As DbSet(Of Application_Attestation)
    Public Property Courses() As DbSet(Of Course)
    Public Property RN_Work_Experience() As DbSet(Of RN_Work_Experience)
    Public Property User_RN_Mapping() As DbSet(Of User_RN_Mapping)
    Public Property RN_Secretary_Association() As DbSet(Of RN_Secretary_Association)
    Public Property Applications() As DbSet(Of Application)
    Public Property Notations() As DbSet(Of Notation)
    Public Property Address1() As DbSet(Of Address1)
    Public Property Address_Information() As DbSet(Of Address_Information)
    Public Property City_Information() As DbSet(Of City_Information)
    Public Property Email1() As DbSet(Of Email1)
    Public Property Phone_Number() As DbSet(Of Phone_Number)
    Public Property Application_Employer() As DbSet(Of Application_Employer)
    Public Property Application_Address_Xref() As DbSet(Of Application_Address_Xref)
    Public Property Application_Email_Xref() As DbSet(Of Application_Email_Xref)
    Public Property Application_Phone_Xref() As DbSet(Of Application_Phone_Xref)
    Public Property Application_Employer_Address_Xref() As DbSet(Of Application_Employer_Address_Xref)
    Public Property Application_Employer_Email_Xref() As DbSet(Of Application_Employer_Email_Xref)
    Public Property Application_Employer_Phone_Xref() As DbSet(Of Application_Employer_Phone_Xref)
    Public Property Employer_RN_DD_Person_Type_Address_Xref() As DbSet(Of Employer_RN_DD_Person_Type_Address_Xref)
    Public Property Employer_RN_DD_Person_Type_Email_Xref() As DbSet(Of Employer_RN_DD_Person_Type_Email_Xref)
    Public Property Employer_RN_DD_Person_Type_Phone_Xref() As DbSet(Of Employer_RN_DD_Person_Type_Phone_Xref)
    Public Property RN_DD_Person_Type_Address_Xref() As DbSet(Of RN_DD_Person_Type_Address_Xref)
    Public Property RN_DD_Person_Type_Email_Xref() As DbSet(Of RN_DD_Person_Type_Email_Xref)
    Public Property RN_DD_Person_Type_Phone_Xref() As DbSet(Of RN_DD_Person_Type_Phone_Xref)
    Public Property User_Mapping() As DbSet(Of User_Mapping)
    Public Property Session_Address_Xref() As DbSet(Of Session_Address_Xref)
    Public Property RN_Work_Experience_Address_Xref() As DbSet(Of RN_Work_Experience_Address_Xref)
    Public Property RN_Work_Experience_Email_Xref() As DbSet(Of RN_Work_Experience_Email_Xref)
    Public Property RN_Work_Experience_Phone_Xref() As DbSet(Of RN_Work_Experience_Phone_Xref)
    Public Property RN_Application_Work_Experience_Phone_Xref() As DbSet(Of RN_Application_Work_Experience_Phone_Xref)
    Public Property RN_Application_Work_Experience_Email_Xref() As DbSet(Of RN_Application_Work_Experience_Email_Xref)
    Public Property RN_Application_Work_Experience_Address_Xref() As DbSet(Of RN_Application_Work_Experience_Address_Xref)
    Public Property Counties() As DbSet(Of County)
    Public Property States() As DbSet(Of State)
    Public Property History_Employers() As DbSet(Of History_Employers)
    Public Property History_Employment() As DbSet(Of History_Employment)
    Public Property History_Supervisor() As DbSet(Of History_Supervisor)
    Public Property History_Work_Address() As DbSet(Of History_Work_Address)
    Public Property Application_History() As DbSet(Of Application_History)
    Public Property DODD_Message() As DbSet(Of DODD_Message)
    Public Property DODD_Message_MAIS_Role_XRef() As DbSet(Of DODD_Message_MAIS_Role_XRef)
    Public Property DODD_Message_RN_DD_Person_Type_Xref_Xref() As DbSet(Of DODD_Message_RN_DD_Person_Type_Xref_Xref)
    Public Property Application_Uploaded_Document() As DbSet(Of Application_Uploaded_Document)
    Public Property Renewal_History_Count() As DbSet(Of Renewal_History_Count)
    Public Property Resources() As DbSet(Of Resource)

    Public Overridable Function Email_Lookup_And_Insert(emailSID As ObjectParameter, email_Address As String) As ObjectResult(Of Email_Lookup_And_Insert_Result)
        Dim email_AddressParameter As ObjectParameter = If(email_Address IsNot Nothing, New ObjectParameter("Email_Address", email_Address), New ObjectParameter("Email_Address", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Email_Lookup_And_Insert_Result)("Email_Lookup_And_Insert", emailSID, email_AddressParameter)
    End Function

    Public Overridable Function Phone_Number_Lookup_And_Insert(phoneSID As ObjectParameter, phone_Number As String) As ObjectResult(Of Phone_Number_Lookup_And_Insert_Result)
        Dim phone_NumberParameter As ObjectParameter = If(phone_Number IsNot Nothing, New ObjectParameter("Phone_Number", phone_Number), New ObjectParameter("Phone_Number", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Phone_Number_Lookup_And_Insert_Result)("Phone_Number_Lookup_And_Insert", phoneSID, phone_NumberParameter)
    End Function

    Public Overridable Function Address_Lookup_And_Insert(addressSID As ObjectParameter, building_Name As String, address_Line1 As String, address_Line2 As String, address_Line3 As String, countyID As Nullable(Of Integer), stateID As Nullable(Of Integer), zip As String, city As String, overrideAddress As Nullable(Of Boolean)) As ObjectResult(Of Address_Lookup_And_Insert_Result)
        Dim building_NameParameter As ObjectParameter = If(building_Name IsNot Nothing, New ObjectParameter("Building_Name", building_Name), New ObjectParameter("Building_Name", GetType(String)))

        Dim address_Line1Parameter As ObjectParameter = If(address_Line1 IsNot Nothing, New ObjectParameter("Address_Line1", address_Line1), New ObjectParameter("Address_Line1", GetType(String)))

        Dim address_Line2Parameter As ObjectParameter = If(address_Line2 IsNot Nothing, New ObjectParameter("Address_Line2", address_Line2), New ObjectParameter("Address_Line2", GetType(String)))

        Dim address_Line3Parameter As ObjectParameter = If(address_Line3 IsNot Nothing, New ObjectParameter("Address_Line3", address_Line3), New ObjectParameter("Address_Line3", GetType(String)))

        Dim countyIDParameter As ObjectParameter = If(countyID.HasValue, New ObjectParameter("CountyID", countyID), New ObjectParameter("CountyID", GetType(Integer)))

        Dim stateIDParameter As ObjectParameter = If(stateID.HasValue, New ObjectParameter("StateID", stateID), New ObjectParameter("StateID", GetType(Integer)))

        Dim zipParameter As ObjectParameter = If(zip IsNot Nothing, New ObjectParameter("Zip", zip), New ObjectParameter("Zip", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Dim overrideAddressParameter As ObjectParameter = If(overrideAddress.HasValue, New ObjectParameter("OverrideAddress", overrideAddress), New ObjectParameter("OverrideAddress", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Address_Lookup_And_Insert_Result)("Address_Lookup_And_Insert", addressSID, building_NameParameter, address_Line1Parameter, address_Line2Parameter, address_Line3Parameter, countyIDParameter, stateIDParameter, zipParameter, cityParameter, overrideAddressParameter)
    End Function

    Public Overridable Function USP_Get_DDPersonnel_MAIS_Report_Results(dDPersonnelcode As String, last4SSN As Nullable(Of Integer), firstName As String, lastName As String, supFirstName As String, supLastName As String, empName As String, ceoFirstName As String, ceoLastName As String, certificationtype_rlc As Nullable(Of Integer), certStatusId As Nullable(Of Integer), courseId As Nullable(Of Integer), sessionId As Nullable(Of Integer), rN_Sid As Nullable(Of Integer), expDateFrom As Nullable(Of Date), expDateTo As Nullable(Of Date), flg30days As Nullable(Of Boolean), flg60days As Nullable(Of Boolean), flg90days As Nullable(Of Boolean), flg180days As Nullable(Of Boolean), workAddrId As Nullable(Of Integer), adminFLg As Nullable(Of Boolean)) As ObjectResult(Of USP_Get_DDPersonnel_MAIS_Report_Results_Result)
        Dim dDPersonnelcodeParameter As ObjectParameter = If(dDPersonnelcode IsNot Nothing, New ObjectParameter("DDPersonnelcode", dDPersonnelcode), New ObjectParameter("DDPersonnelcode", GetType(String)))

        Dim last4SSNParameter As ObjectParameter = If(last4SSN.HasValue, New ObjectParameter("Last4SSN", last4SSN), New ObjectParameter("Last4SSN", GetType(Integer)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim supFirstNameParameter As ObjectParameter = If(supFirstName IsNot Nothing, New ObjectParameter("SupFirstName", supFirstName), New ObjectParameter("SupFirstName", GetType(String)))

        Dim supLastNameParameter As ObjectParameter = If(supLastName IsNot Nothing, New ObjectParameter("SupLastName", supLastName), New ObjectParameter("SupLastName", GetType(String)))

        Dim empNameParameter As ObjectParameter = If(empName IsNot Nothing, New ObjectParameter("EmpName", empName), New ObjectParameter("EmpName", GetType(String)))

        Dim ceoFirstNameParameter As ObjectParameter = If(ceoFirstName IsNot Nothing, New ObjectParameter("CeoFirstName", ceoFirstName), New ObjectParameter("CeoFirstName", GetType(String)))

        Dim ceoLastNameParameter As ObjectParameter = If(ceoLastName IsNot Nothing, New ObjectParameter("CeoLastName", ceoLastName), New ObjectParameter("CeoLastName", GetType(String)))

        Dim certificationtype_rlcParameter As ObjectParameter = If(certificationtype_rlc.HasValue, New ObjectParameter("Certificationtype_rlc", certificationtype_rlc), New ObjectParameter("Certificationtype_rlc", GetType(Integer)))

        Dim certStatusIdParameter As ObjectParameter = If(certStatusId.HasValue, New ObjectParameter("CertStatusId", certStatusId), New ObjectParameter("CertStatusId", GetType(Integer)))

        Dim courseIdParameter As ObjectParameter = If(courseId.HasValue, New ObjectParameter("CourseId", courseId), New ObjectParameter("CourseId", GetType(Integer)))

        Dim sessionIdParameter As ObjectParameter = If(sessionId.HasValue, New ObjectParameter("SessionId", sessionId), New ObjectParameter("SessionId", GetType(Integer)))

        Dim rN_SidParameter As ObjectParameter = If(rN_Sid.HasValue, New ObjectParameter("RN_Sid", rN_Sid), New ObjectParameter("RN_Sid", GetType(Integer)))

        Dim expDateFromParameter As ObjectParameter = If(expDateFrom.HasValue, New ObjectParameter("ExpDateFrom", expDateFrom), New ObjectParameter("ExpDateFrom", GetType(Date)))

        Dim expDateToParameter As ObjectParameter = If(expDateTo.HasValue, New ObjectParameter("ExpDateTo", expDateTo), New ObjectParameter("ExpDateTo", GetType(Date)))

        Dim flg30daysParameter As ObjectParameter = If(flg30days.HasValue, New ObjectParameter("Flg30days", flg30days), New ObjectParameter("Flg30days", GetType(Boolean)))

        Dim flg60daysParameter As ObjectParameter = If(flg60days.HasValue, New ObjectParameter("Flg60days", flg60days), New ObjectParameter("Flg60days", GetType(Boolean)))

        Dim flg90daysParameter As ObjectParameter = If(flg90days.HasValue, New ObjectParameter("Flg90days", flg90days), New ObjectParameter("Flg90days", GetType(Boolean)))

        Dim flg180daysParameter As ObjectParameter = If(flg180days.HasValue, New ObjectParameter("Flg180days", flg180days), New ObjectParameter("Flg180days", GetType(Boolean)))

        Dim workAddrIdParameter As ObjectParameter = If(workAddrId.HasValue, New ObjectParameter("WorkAddrId", workAddrId), New ObjectParameter("WorkAddrId", GetType(Integer)))

        Dim adminFLgParameter As ObjectParameter = If(adminFLg.HasValue, New ObjectParameter("AdminFLg", adminFLg), New ObjectParameter("AdminFLg", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of USP_Get_DDPersonnel_MAIS_Report_Results_Result)("USP_Get_DDPersonnel_MAIS_Report_Results", dDPersonnelcodeParameter, last4SSNParameter, firstNameParameter, lastNameParameter, supFirstNameParameter, supLastNameParameter, empNameParameter, ceoFirstNameParameter, ceoLastNameParameter, certificationtype_rlcParameter, certStatusIdParameter, courseIdParameter, sessionIdParameter, rN_SidParameter, expDateFromParameter, expDateToParameter, flg30daysParameter, flg60daysParameter, flg90daysParameter, flg180daysParameter, workAddrIdParameter, adminFLgParameter)
    End Function

    Public Overridable Function USP_Get_DDPersonnel_Search_Results(appID As Nullable(Of Integer), sSN As String, dDCode As String, lastName As String, firstName As String, employer As String, applicationStatus As String, dOB As Nullable(Of Date)) As ObjectResult(Of USP_Get_DDPersonnel_Search_Results_Result)
        Dim appIDParameter As ObjectParameter = If(appID.HasValue, New ObjectParameter("AppID", appID), New ObjectParameter("AppID", GetType(Integer)))

        Dim sSNParameter As ObjectParameter = If(sSN IsNot Nothing, New ObjectParameter("SSN", sSN), New ObjectParameter("SSN", GetType(String)))

        Dim dDCodeParameter As ObjectParameter = If(dDCode IsNot Nothing, New ObjectParameter("DDCode", dDCode), New ObjectParameter("DDCode", GetType(String)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim employerParameter As ObjectParameter = If(employer IsNot Nothing, New ObjectParameter("Employer", employer), New ObjectParameter("Employer", GetType(String)))

        Dim applicationStatusParameter As ObjectParameter = If(applicationStatus IsNot Nothing, New ObjectParameter("ApplicationStatus", applicationStatus), New ObjectParameter("ApplicationStatus", GetType(String)))

        Dim dOBParameter As ObjectParameter = If(dOB.HasValue, New ObjectParameter("DOB", dOB), New ObjectParameter("DOB", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of USP_Get_DDPersonnel_Search_Results_Result)("USP_Get_DDPersonnel_Search_Results", appIDParameter, sSNParameter, dDCodeParameter, lastNameParameter, firstNameParameter, employerParameter, applicationStatusParameter, dOBParameter)
    End Function

    Public Overridable Function USP_Get_RN_MAIS_Report_Results(rNLicenseNo As String, firstName As String, lastName As String, supFirstName As String, supLastName As String, empName As String, ceoFirstName As String, ceoLastName As String, certificationtype_rlc As Nullable(Of Integer), certStatusId As Nullable(Of Integer), courseId As Nullable(Of Integer), sessionId As Nullable(Of Integer), rN_Sid As Nullable(Of Integer), expDateFrom As Nullable(Of Date), expDateTo As Nullable(Of Date), flg30days As Nullable(Of Boolean), flg60days As Nullable(Of Boolean), flg90days As Nullable(Of Boolean), flg180days As Nullable(Of Boolean), workAddrId As Nullable(Of Integer)) As ObjectResult(Of USP_Get_RN_MAIS_Report_Results_Result)
        Dim rNLicenseNoParameter As ObjectParameter = If(rNLicenseNo IsNot Nothing, New ObjectParameter("RNLicenseNo", rNLicenseNo), New ObjectParameter("RNLicenseNo", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim supFirstNameParameter As ObjectParameter = If(supFirstName IsNot Nothing, New ObjectParameter("SupFirstName", supFirstName), New ObjectParameter("SupFirstName", GetType(String)))

        Dim supLastNameParameter As ObjectParameter = If(supLastName IsNot Nothing, New ObjectParameter("SupLastName", supLastName), New ObjectParameter("SupLastName", GetType(String)))

        Dim empNameParameter As ObjectParameter = If(empName IsNot Nothing, New ObjectParameter("EmpName", empName), New ObjectParameter("EmpName", GetType(String)))

        Dim ceoFirstNameParameter As ObjectParameter = If(ceoFirstName IsNot Nothing, New ObjectParameter("CeoFirstName", ceoFirstName), New ObjectParameter("CeoFirstName", GetType(String)))

        Dim ceoLastNameParameter As ObjectParameter = If(ceoLastName IsNot Nothing, New ObjectParameter("CeoLastName", ceoLastName), New ObjectParameter("CeoLastName", GetType(String)))

        Dim certificationtype_rlcParameter As ObjectParameter = If(certificationtype_rlc.HasValue, New ObjectParameter("Certificationtype_rlc", certificationtype_rlc), New ObjectParameter("Certificationtype_rlc", GetType(Integer)))

        Dim certStatusIdParameter As ObjectParameter = If(certStatusId.HasValue, New ObjectParameter("CertStatusId", certStatusId), New ObjectParameter("CertStatusId", GetType(Integer)))

        Dim courseIdParameter As ObjectParameter = If(courseId.HasValue, New ObjectParameter("CourseId", courseId), New ObjectParameter("CourseId", GetType(Integer)))

        Dim sessionIdParameter As ObjectParameter = If(sessionId.HasValue, New ObjectParameter("SessionId", sessionId), New ObjectParameter("SessionId", GetType(Integer)))

        Dim rN_SidParameter As ObjectParameter = If(rN_Sid.HasValue, New ObjectParameter("RN_Sid", rN_Sid), New ObjectParameter("RN_Sid", GetType(Integer)))

        Dim expDateFromParameter As ObjectParameter = If(expDateFrom.HasValue, New ObjectParameter("ExpDateFrom", expDateFrom), New ObjectParameter("ExpDateFrom", GetType(Date)))

        Dim expDateToParameter As ObjectParameter = If(expDateTo.HasValue, New ObjectParameter("ExpDateTo", expDateTo), New ObjectParameter("ExpDateTo", GetType(Date)))

        Dim flg30daysParameter As ObjectParameter = If(flg30days.HasValue, New ObjectParameter("Flg30days", flg30days), New ObjectParameter("Flg30days", GetType(Boolean)))

        Dim flg60daysParameter As ObjectParameter = If(flg60days.HasValue, New ObjectParameter("Flg60days", flg60days), New ObjectParameter("Flg60days", GetType(Boolean)))

        Dim flg90daysParameter As ObjectParameter = If(flg90days.HasValue, New ObjectParameter("Flg90days", flg90days), New ObjectParameter("Flg90days", GetType(Boolean)))

        Dim flg180daysParameter As ObjectParameter = If(flg180days.HasValue, New ObjectParameter("Flg180days", flg180days), New ObjectParameter("Flg180days", GetType(Boolean)))

        Dim workAddrIdParameter As ObjectParameter = If(workAddrId.HasValue, New ObjectParameter("WorkAddrId", workAddrId), New ObjectParameter("WorkAddrId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of USP_Get_RN_MAIS_Report_Results_Result)("USP_Get_RN_MAIS_Report_Results", rNLicenseNoParameter, firstNameParameter, lastNameParameter, supFirstNameParameter, supLastNameParameter, empNameParameter, ceoFirstNameParameter, ceoLastNameParameter, certificationtype_rlcParameter, certStatusIdParameter, courseIdParameter, sessionIdParameter, rN_SidParameter, expDateFromParameter, expDateToParameter, flg30daysParameter, flg60daysParameter, flg90daysParameter, flg180daysParameter, workAddrIdParameter)
    End Function

    Public Overridable Function USP_Get_RN_Search_Results(appID As Nullable(Of Integer), rNLicenseNo As String, lastName As String, firstName As String, employer As String, applicationStatus As String, originalDateOfLicense As Nullable(Of Date)) As ObjectResult(Of USP_Get_RN_Search_Results_Result)
        Dim appIDParameter As ObjectParameter = If(appID.HasValue, New ObjectParameter("AppID", appID), New ObjectParameter("AppID", GetType(Integer)))

        Dim rNLicenseNoParameter As ObjectParameter = If(rNLicenseNo IsNot Nothing, New ObjectParameter("RNLicenseNo", rNLicenseNo), New ObjectParameter("RNLicenseNo", GetType(String)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim employerParameter As ObjectParameter = If(employer IsNot Nothing, New ObjectParameter("Employer", employer), New ObjectParameter("Employer", GetType(String)))

        Dim applicationStatusParameter As ObjectParameter = If(applicationStatus IsNot Nothing, New ObjectParameter("ApplicationStatus", applicationStatus), New ObjectParameter("ApplicationStatus", GetType(String)))

        Dim originalDateOfLicenseParameter As ObjectParameter = If(originalDateOfLicense.HasValue, New ObjectParameter("OriginalDateOfLicense", originalDateOfLicense), New ObjectParameter("OriginalDateOfLicense", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of USP_Get_RN_Search_Results_Result)("USP_Get_RN_Search_Results", appIDParameter, rNLicenseNoParameter, lastNameParameter, firstNameParameter, employerParameter, applicationStatusParameter, originalDateOfLicenseParameter)
    End Function

End Class
