Imports MAIS.Business.Helpers
Imports MAIS.Business.Model.Enums
Imports Microsoft.Reporting.WebForms
Imports System.Security
Imports System.Security.Permissions
Imports System.IO
Imports MAIS.Business.Services

Public Class ViewCertificate
    Inherits System.Web.UI.Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim uploadedFiles As New List(Of Business.Model.DocumentUpload)
        Dim uploadSvc As IUploadService = StructureMap.ObjectFactory.GetInstance(Of IUploadService)()

        uploadedFiles = uploadSvc.GetUploadedDocuments(SessionHelper.ApplicationID) 'SessionHelper.ApplicationID
        uploadedFiles = uploadedFiles.FindAll(Function(up) up.DocumentTypeID = 9)
        If (uploadedFiles IsNot Nothing And uploadedFiles.Count > 0) Then
            gvFiles.DataSource = uploadedFiles
            gvFiles.DataBind()
        Else
            gvFiles.DataSource = Nothing
            gvFiles.DataBind()
            lblCertificate.Visible = True
        End If
    End Sub
    Protected Sub gvFiles_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs) Handles gvFiles.SelectedIndexChanging
        'Transmit copy of selected file to user for preview
        Dim uploadService As IUploadService = StructureMap.ObjectFactory.GetInstance(Of IUploadService)()
        Dim byteArrayForFileToView As Byte() = uploadService.GetUploadedDocumentByImageSID(gvFiles.DataKeys(e.NewSelectedIndex).Values(0))

        'Clear all content output from buffer stream
        Response.Clear()

        Dim filenameCell As Integer = 2

        If gvFiles.AutoGenerateDeleteButton = False Then
            filenameCell = 1
        End If

        'Add HTTP header to output stream to specify a default filename, and file length
        Response.AddHeader("Content-Disposition", "attachment; filename=" & _
            gvFiles.Rows(e.NewSelectedIndex).Cells.Item(filenameCell).Text.ToString)

        Response.AddHeader("Content-Length", byteArrayForFileToView.Length.ToString())

        'Set the HTTP MIME type for output stream
        Response.ContentType = "application/octet-stream"

        'Output the data to the client
        If byteArrayForFileToView.Length > 0 Then
            Dim ext = System.IO.Path.GetExtension(gvFiles.Rows(e.NewSelectedIndex).Cells(filenameCell).Text.ToString)

            'If ext = ".html" Then
            '    Response.Redirect(PagesHelper.AttestationPrintPage)
            'Else
            Response.BinaryWrite(byteArrayForFileToView)
            'End If

            Response.End()
            Dim viewCertificateService As ICertificateService = StructureMap.ObjectFactory.GetInstance(Of ICertificateService)()
            Dim flag As Boolean = viewCertificateService.GetCertificationDateInHistory(SessionHelper.ApplicationID)
            If (flag = False) Then
                lblCertificate.InnerText = "An error occurred while saving certificate view date in history"
            End If
        End If
    End Sub
End Class