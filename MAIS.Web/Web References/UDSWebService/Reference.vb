'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
'
Namespace UDSWebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UDSServiceSoap", [Namespace]:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services")>  _
    Partial Public Class UDSService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private AddMultipageTifToQueueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFileToQueueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFileToQueue1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchUDSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchUDS1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDocumentTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDocumentTypes1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGenericIndexesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGenericIndexes1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveToUDSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveToUDS1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Validate_oldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.MAIS.Web.My.MySettings.Default.CertificationWizard_UDSWebService_UDSService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AddMultipageTifToQueueCompleted As AddMultipageTifToQueueCompletedEventHandler
        
        '''<remarks/>
        Public Event AddFileToQueueCompleted As AddFileToQueueCompletedEventHandler
        
        '''<remarks/>
        Public Event AddFileToQueue1Completed As AddFileToQueue1CompletedEventHandler
        
        '''<remarks/>
        Public Event SearchUDSCompleted As SearchUDSCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchUDS1Completed As SearchUDS1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDocumentTypesCompleted As GetDocumentTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDocumentTypes1Completed As GetDocumentTypes1CompletedEventHandler
        
        '''<remarks/>
        Public Event GetGenericIndexesCompleted As GetGenericIndexesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGenericIndexes1Completed As GetGenericIndexes1CompletedEventHandler
        
        '''<remarks/>
        Public Event SaveToUDSCompleted As SaveToUDSCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveToUDS1Completed As SaveToUDS1CompletedEventHandler
        
        '''<remarks/>
        Public Event Validate_oldCompleted As Validate_oldCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateCompleted As ValidateCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/AddMultipageTifToQueue", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddMultipageTifToQueue(ByVal repoId As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet) As Result
            Dim results() As Object = Me.Invoke("AddMultipageTifToQueue", New Object() {repoId, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes})
            Return CType(results(0),Result)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddMultipageTifToQueueAsync(ByVal repoId As Integer, ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet)
            Me.AddMultipageTifToQueueAsync(repoId, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddMultipageTifToQueueAsync(ByVal repoId As Integer, ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet, ByVal userState As Object)
            If (Me.AddMultipageTifToQueueOperationCompleted Is Nothing) Then
                Me.AddMultipageTifToQueueOperationCompleted = AddressOf Me.OnAddMultipageTifToQueueOperationCompleted
            End If
            Me.InvokeAsync("AddMultipageTifToQueue", New Object() {repoId, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes}, Me.AddMultipageTifToQueueOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddMultipageTifToQueueOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddMultipageTifToQueueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddMultipageTifToQueueCompleted(Me, New AddMultipageTifToQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/AddFileToQueue", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function AddFileToQueue(ByVal repoId As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet) As Result
            Dim results() As Object = Me.Invoke("AddFileToQueue", New Object() {repoId, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes})
            Return CType(results(0),Result)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFileToQueueAsync(ByVal repoId As Integer, ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet)
            Me.AddFileToQueueAsync(repoId, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFileToQueueAsync(ByVal repoId As Integer, ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet, ByVal userState As Object)
            If (Me.AddFileToQueueOperationCompleted Is Nothing) Then
                Me.AddFileToQueueOperationCompleted = AddressOf Me.OnAddFileToQueueOperationCompleted
            End If
            Me.InvokeAsync("AddFileToQueue", New Object() {repoId, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes}, Me.AddFileToQueueOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFileToQueueOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFileToQueueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFileToQueueCompleted(Me, New AddFileToQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="AddFileToQueue1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/AddFileToQueueName", RequestElementName:="AddFileToQueueName", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="AddFileToQueueNameResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function AddFileToQueue(ByVal repoName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet) As <System.Xml.Serialization.XmlElementAttribute("AddFileToQueueNameResult")> Result
            Dim results() As Object = Me.Invoke("AddFileToQueue1", New Object() {repoName, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes})
            Return CType(results(0),Result)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFileToQueue1Async(ByVal repoName As String, ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet)
            Me.AddFileToQueue1Async(repoName, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFileToQueue1Async(ByVal repoName As String, ByVal blob() As Byte, ByVal blobFilename As String, ByVal sourceType As String, ByVal sourceName As String, ByVal userName As String, ByVal notes As String, ByVal docType As String, ByVal docDesc As String, ByVal receivedDate As Date, ByVal indexes As System.Data.DataSet, ByVal userState As Object)
            If (Me.AddFileToQueue1OperationCompleted Is Nothing) Then
                Me.AddFileToQueue1OperationCompleted = AddressOf Me.OnAddFileToQueue1OperationCompleted
            End If
            Me.InvokeAsync("AddFileToQueue1", New Object() {repoName, blob, blobFilename, sourceType, sourceName, userName, notes, docType, docDesc, receivedDate, indexes}, Me.AddFileToQueue1OperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFileToQueue1OperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFileToQueue1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFileToQueue1Completed(Me, New AddFileToQueue1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/SearchUDSId", RequestElementName:="SearchUDSId", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="SearchUDSIdResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SearchUDS(ByVal repoId As Integer, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal numRows As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal batchId As System.Nullable(Of Integer), ByVal fulltext As String, ByVal filename As String, ByVal indexUser As String, ByVal checkedOutUser As String, ByVal docType As String, ByVal docDescription As String, ByVal createDate As String, ByVal updateDate As String, ByVal dsGenerics As System.Data.DataSet) As <System.Xml.Serialization.XmlArrayAttribute("SearchUDSIdResult")> IndexedDocument()
            Dim results() As Object = Me.Invoke("SearchUDS", New Object() {repoId, numRows, batchId, fulltext, filename, indexUser, checkedOutUser, docType, docDescription, createDate, updateDate, dsGenerics})
            Return CType(results(0),IndexedDocument())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchUDSAsync(ByVal repoId As Integer, ByVal numRows As System.Nullable(Of Integer), ByVal batchId As System.Nullable(Of Integer), ByVal fulltext As String, ByVal filename As String, ByVal indexUser As String, ByVal checkedOutUser As String, ByVal docType As String, ByVal docDescription As String, ByVal createDate As String, ByVal updateDate As String, ByVal dsGenerics As System.Data.DataSet)
            Me.SearchUDSAsync(repoId, numRows, batchId, fulltext, filename, indexUser, checkedOutUser, docType, docDescription, createDate, updateDate, dsGenerics, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchUDSAsync(ByVal repoId As Integer, ByVal numRows As System.Nullable(Of Integer), ByVal batchId As System.Nullable(Of Integer), ByVal fulltext As String, ByVal filename As String, ByVal indexUser As String, ByVal checkedOutUser As String, ByVal docType As String, ByVal docDescription As String, ByVal createDate As String, ByVal updateDate As String, ByVal dsGenerics As System.Data.DataSet, ByVal userState As Object)
            If (Me.SearchUDSOperationCompleted Is Nothing) Then
                Me.SearchUDSOperationCompleted = AddressOf Me.OnSearchUDSOperationCompleted
            End If
            Me.InvokeAsync("SearchUDS", New Object() {repoId, numRows, batchId, fulltext, filename, indexUser, checkedOutUser, docType, docDescription, createDate, updateDate, dsGenerics}, Me.SearchUDSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchUDSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchUDSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchUDSCompleted(Me, New SearchUDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="SearchUDS1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/SearchUDSName", RequestElementName:="SearchUDSName", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="SearchUDSNameResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SearchUDS(ByVal repoName As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal numRows As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal batchId As System.Nullable(Of Integer), ByVal fulltext As String, ByVal filename As String, ByVal indexUser As String, ByVal checkedOutUser As String, ByVal docType As String, ByVal docDescription As String, ByVal createDate As String, ByVal updateDate As String, ByVal dsGenerics As System.Data.DataSet) As <System.Xml.Serialization.XmlArrayAttribute("SearchUDSNameResult")> IndexedDocument()
            Dim results() As Object = Me.Invoke("SearchUDS1", New Object() {repoName, numRows, batchId, fulltext, filename, indexUser, checkedOutUser, docType, docDescription, createDate, updateDate, dsGenerics})
            Return CType(results(0),IndexedDocument())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchUDS1Async(ByVal repoName As String, ByVal numRows As System.Nullable(Of Integer), ByVal batchId As System.Nullable(Of Integer), ByVal fulltext As String, ByVal filename As String, ByVal indexUser As String, ByVal checkedOutUser As String, ByVal docType As String, ByVal docDescription As String, ByVal createDate As String, ByVal updateDate As String, ByVal dsGenerics As System.Data.DataSet)
            Me.SearchUDS1Async(repoName, numRows, batchId, fulltext, filename, indexUser, checkedOutUser, docType, docDescription, createDate, updateDate, dsGenerics, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchUDS1Async(ByVal repoName As String, ByVal numRows As System.Nullable(Of Integer), ByVal batchId As System.Nullable(Of Integer), ByVal fulltext As String, ByVal filename As String, ByVal indexUser As String, ByVal checkedOutUser As String, ByVal docType As String, ByVal docDescription As String, ByVal createDate As String, ByVal updateDate As String, ByVal dsGenerics As System.Data.DataSet, ByVal userState As Object)
            If (Me.SearchUDS1OperationCompleted Is Nothing) Then
                Me.SearchUDS1OperationCompleted = AddressOf Me.OnSearchUDS1OperationCompleted
            End If
            Me.InvokeAsync("SearchUDS1", New Object() {repoName, numRows, batchId, fulltext, filename, indexUser, checkedOutUser, docType, docDescription, createDate, updateDate, dsGenerics}, Me.SearchUDS1OperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchUDS1OperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchUDS1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchUDS1Completed(Me, New SearchUDS1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/GetDocumentTypeId", RequestElementName:="GetDocumentTypeId", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="GetDocumentTypeIdResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetDocumentTypes(ByVal repoId As Integer) As <System.Xml.Serialization.XmlArrayAttribute("GetDocumentTypeIdResult")> DocumentType()
            Dim results() As Object = Me.Invoke("GetDocumentTypes", New Object() {repoId})
            Return CType(results(0),DocumentType())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDocumentTypesAsync(ByVal repoId As Integer)
            Me.GetDocumentTypesAsync(repoId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDocumentTypesAsync(ByVal repoId As Integer, ByVal userState As Object)
            If (Me.GetDocumentTypesOperationCompleted Is Nothing) Then
                Me.GetDocumentTypesOperationCompleted = AddressOf Me.OnGetDocumentTypesOperationCompleted
            End If
            Me.InvokeAsync("GetDocumentTypes", New Object() {repoId}, Me.GetDocumentTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDocumentTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDocumentTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDocumentTypesCompleted(Me, New GetDocumentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="GetDocumentTypes1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/GetDocumentTypeName", RequestElementName:="GetDocumentTypeName", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="GetDocumentTypeNameResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetDocumentTypes(ByVal repoName As String) As <System.Xml.Serialization.XmlArrayAttribute("GetDocumentTypeNameResult")> DocumentType()
            Dim results() As Object = Me.Invoke("GetDocumentTypes1", New Object() {repoName})
            Return CType(results(0),DocumentType())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDocumentTypes1Async(ByVal repoName As String)
            Me.GetDocumentTypes1Async(repoName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDocumentTypes1Async(ByVal repoName As String, ByVal userState As Object)
            If (Me.GetDocumentTypes1OperationCompleted Is Nothing) Then
                Me.GetDocumentTypes1OperationCompleted = AddressOf Me.OnGetDocumentTypes1OperationCompleted
            End If
            Me.InvokeAsync("GetDocumentTypes1", New Object() {repoName}, Me.GetDocumentTypes1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDocumentTypes1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDocumentTypes1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDocumentTypes1Completed(Me, New GetDocumentTypes1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/GetGenericIndexesId", RequestElementName:="GetGenericIndexesId", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="GetGenericIndexesIdResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetGenericIndexes(ByVal repoId As Integer) As <System.Xml.Serialization.XmlElementAttribute("GetGenericIndexesIdResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetGenericIndexes", New Object() {repoId})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGenericIndexesAsync(ByVal repoId As Integer)
            Me.GetGenericIndexesAsync(repoId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGenericIndexesAsync(ByVal repoId As Integer, ByVal userState As Object)
            If (Me.GetGenericIndexesOperationCompleted Is Nothing) Then
                Me.GetGenericIndexesOperationCompleted = AddressOf Me.OnGetGenericIndexesOperationCompleted
            End If
            Me.InvokeAsync("GetGenericIndexes", New Object() {repoId}, Me.GetGenericIndexesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGenericIndexesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGenericIndexesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGenericIndexesCompleted(Me, New GetGenericIndexesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="GetGenericIndexes1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/GetGenericIndexesName", RequestElementName:="GetGenericIndexesName", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="GetGenericIndexesNameResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function GetGenericIndexes(ByVal repoName As String) As <System.Xml.Serialization.XmlElementAttribute("GetGenericIndexesNameResult")> System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetGenericIndexes1", New Object() {repoName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGenericIndexes1Async(ByVal repoName As String)
            Me.GetGenericIndexes1Async(repoName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGenericIndexes1Async(ByVal repoName As String, ByVal userState As Object)
            If (Me.GetGenericIndexes1OperationCompleted Is Nothing) Then
                Me.GetGenericIndexes1OperationCompleted = AddressOf Me.OnGetGenericIndexes1OperationCompleted
            End If
            Me.InvokeAsync("GetGenericIndexes1", New Object() {repoName}, Me.GetGenericIndexes1OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGenericIndexes1OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGenericIndexes1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGenericIndexes1Completed(Me, New GetGenericIndexes1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/SaveToUDSId", RequestElementName:="SaveToUDSId", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="SaveToUDSIdResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SaveToUDS(ByVal repoId As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal blob() As Byte, ByVal indexingUsername As String, ByVal filename As String, ByVal docType As String, ByVal docDesc As String, ByVal rcvDate As Date, ByVal notes As String, ByVal dsGenerics As System.Data.DataSet) As <System.Xml.Serialization.XmlElementAttribute("SaveToUDSIdResult")> Result
            Dim results() As Object = Me.Invoke("SaveToUDS", New Object() {repoId, blob, indexingUsername, filename, docType, docDesc, rcvDate, notes, dsGenerics})
            Return CType(results(0),Result)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveToUDSAsync(ByVal repoId As Integer, ByVal blob() As Byte, ByVal indexingUsername As String, ByVal filename As String, ByVal docType As String, ByVal docDesc As String, ByVal rcvDate As Date, ByVal notes As String, ByVal dsGenerics As System.Data.DataSet)
            Me.SaveToUDSAsync(repoId, blob, indexingUsername, filename, docType, docDesc, rcvDate, notes, dsGenerics, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveToUDSAsync(ByVal repoId As Integer, ByVal blob() As Byte, ByVal indexingUsername As String, ByVal filename As String, ByVal docType As String, ByVal docDesc As String, ByVal rcvDate As Date, ByVal notes As String, ByVal dsGenerics As System.Data.DataSet, ByVal userState As Object)
            If (Me.SaveToUDSOperationCompleted Is Nothing) Then
                Me.SaveToUDSOperationCompleted = AddressOf Me.OnSaveToUDSOperationCompleted
            End If
            Me.InvokeAsync("SaveToUDS", New Object() {repoId, blob, indexingUsername, filename, docType, docDesc, rcvDate, notes, dsGenerics}, Me.SaveToUDSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveToUDSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveToUDSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveToUDSCompleted(Me, New SaveToUDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="SaveToUDS1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/SaveToUDSName", RequestElementName:="SaveToUDSName", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseElementName:="SaveToUDSNameResponse", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function SaveToUDS(ByVal repoName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal blob() As Byte, ByVal indexingUsername As String, ByVal filename As String, ByVal docType As String, ByVal docDesc As String, ByVal rcvDate As Date, ByVal notes As String, ByVal dsGenerics As System.Data.DataSet) As <System.Xml.Serialization.XmlElementAttribute("SaveToUDSNameResult")> Result
            Dim results() As Object = Me.Invoke("SaveToUDS1", New Object() {repoName, blob, indexingUsername, filename, docType, docDesc, rcvDate, notes, dsGenerics})
            Return CType(results(0),Result)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveToUDS1Async(ByVal repoName As String, ByVal blob() As Byte, ByVal indexingUsername As String, ByVal filename As String, ByVal docType As String, ByVal docDesc As String, ByVal rcvDate As Date, ByVal notes As String, ByVal dsGenerics As System.Data.DataSet)
            Me.SaveToUDS1Async(repoName, blob, indexingUsername, filename, docType, docDesc, rcvDate, notes, dsGenerics, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveToUDS1Async(ByVal repoName As String, ByVal blob() As Byte, ByVal indexingUsername As String, ByVal filename As String, ByVal docType As String, ByVal docDesc As String, ByVal rcvDate As Date, ByVal notes As String, ByVal dsGenerics As System.Data.DataSet, ByVal userState As Object)
            If (Me.SaveToUDS1OperationCompleted Is Nothing) Then
                Me.SaveToUDS1OperationCompleted = AddressOf Me.OnSaveToUDS1OperationCompleted
            End If
            Me.InvokeAsync("SaveToUDS1", New Object() {repoName, blob, indexingUsername, filename, docType, docDesc, rcvDate, notes, dsGenerics}, Me.SaveToUDS1OperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveToUDS1OperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveToUDS1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveToUDS1Completed(Me, New SaveToUDS1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/Validate_old", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Validate_old(ByVal policy As String, ByVal value As String) As String
            Dim results() As Object = Me.Invoke("Validate_old", New Object() {policy, value})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Validate_oldAsync(ByVal policy As String, ByVal value As String)
            Me.Validate_oldAsync(policy, value, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Validate_oldAsync(ByVal policy As String, ByVal value As String, ByVal userState As Object)
            If (Me.Validate_oldOperationCompleted Is Nothing) Then
                Me.Validate_oldOperationCompleted = AddressOf Me.OnValidate_oldOperationCompleted
            End If
            Me.InvokeAsync("Validate_old", New Object() {policy, value}, Me.Validate_oldOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidate_oldOperationCompleted(ByVal arg As Object)
            If (Not (Me.Validate_oldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Validate_oldCompleted(Me, New Validate_oldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services/Validate", RequestNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", ResponseNamespace:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Validate(ByVal policy As String, ByVal value As String) As ValidationResult
            Dim results() As Object = Me.Invoke("Validate", New Object() {policy, value})
            Return CType(results(0),ValidationResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateAsync(ByVal policy As String, ByVal value As String)
            Me.ValidateAsync(policy, value, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateAsync(ByVal policy As String, ByVal value As String, ByVal userState As Object)
            If (Me.ValidateOperationCompleted Is Nothing) Then
                Me.ValidateOperationCompleted = AddressOf Me.OnValidateOperationCompleted
            End If
            Me.InvokeAsync("Validate", New Object() {policy, value}, Me.ValidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateCompleted(Me, New ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services")>  _
    Public Enum Result
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        AlreadyExists
        
        '''<remarks/>
        InError
        
        '''<remarks/>
        Invalid
        
        '''<remarks/>
        EmptyFile
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services")>  _
    Partial Public Class IndexedDocument
        
        Private indexUserField As String
        
        Private checkedOutUserField As String
        
        Private receivedField As Date
        
        Private updatedField As Date
        
        Private notesField As String
        
        Private filenameField As String
        
        Private documentTypeField As String
        
        Private documentDescriptionField As String
        
        Private downloadURLField As String
        
        Private versionField As Integer
        
        Private fileSizeField As Double
        
        Private genericsField() As GenericIndex
        
        '''<remarks/>
        Public Property IndexUser() As String
            Get
                Return Me.indexUserField
            End Get
            Set
                Me.indexUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CheckedOutUser() As String
            Get
                Return Me.checkedOutUserField
            End Get
            Set
                Me.checkedOutUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Received() As Date
            Get
                Return Me.receivedField
            End Get
            Set
                Me.receivedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Updated() As Date
            Get
                Return Me.updatedField
            End Get
            Set
                Me.updatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentType() As String
            Get
                Return Me.documentTypeField
            End Get
            Set
                Me.documentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentDescription() As String
            Get
                Return Me.documentDescriptionField
            End Get
            Set
                Me.documentDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DownloadURL() As String
            Get
                Return Me.downloadURLField
            End Get
            Set
                Me.downloadURLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Version() As Integer
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileSize() As Double
            Get
                Return Me.fileSizeField
            End Get
            Set
                Me.fileSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Generics() As GenericIndex()
            Get
                Return Me.genericsField
            End Get
            Set
                Me.genericsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services")>  _
    Partial Public Class GenericIndex
        
        Private valueField As String
        
        Private labelField As String
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services")>  _
    Partial Public Class ValidationResult
        
        Private validField As Boolean
        
        Private messageField As String
        
        Private indexesField() As GenericIndex
        
        '''<remarks/>
        Public Property Valid() As Boolean
            Get
                Return Me.validField
            End Get
            Set
                Me.validField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Indexes() As GenericIndex()
            Get
                Return Me.indexesField
            End Get
            Set
                Me.indexesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://uds.devlapps2.mrdd1.ad.mr.state.oh.us/uds_services")>  _
    Partial Public Class DocumentType
        
        Private nameField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddMultipageTifToQueueCompletedEventHandler(ByVal sender As Object, ByVal e As AddMultipageTifToQueueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddMultipageTifToQueueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Result
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Result)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddFileToQueueCompletedEventHandler(ByVal sender As Object, ByVal e As AddFileToQueueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFileToQueueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Result
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Result)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddFileToQueue1CompletedEventHandler(ByVal sender As Object, ByVal e As AddFileToQueue1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFileToQueue1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Result
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Result)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SearchUDSCompletedEventHandler(ByVal sender As Object, ByVal e As SearchUDSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchUDSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IndexedDocument()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IndexedDocument())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SearchUDS1CompletedEventHandler(ByVal sender As Object, ByVal e As SearchUDS1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchUDS1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IndexedDocument()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IndexedDocument())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetDocumentTypesCompletedEventHandler(ByVal sender As Object, ByVal e As GetDocumentTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDocumentTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocumentType()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocumentType())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetDocumentTypes1CompletedEventHandler(ByVal sender As Object, ByVal e As GetDocumentTypes1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDocumentTypes1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocumentType()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocumentType())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetGenericIndexesCompletedEventHandler(ByVal sender As Object, ByVal e As GetGenericIndexesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGenericIndexesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetGenericIndexes1CompletedEventHandler(ByVal sender As Object, ByVal e As GetGenericIndexes1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGenericIndexes1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SaveToUDSCompletedEventHandler(ByVal sender As Object, ByVal e As SaveToUDSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveToUDSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Result
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Result)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SaveToUDS1CompletedEventHandler(ByVal sender As Object, ByVal e As SaveToUDS1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveToUDS1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Result
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Result)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub Validate_oldCompletedEventHandler(ByVal sender As Object, ByVal e As Validate_oldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Validate_oldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ValidateCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ValidationResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ValidationResult)
            End Get
        End Property
    End Class
End Namespace
